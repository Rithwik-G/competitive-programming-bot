USER: https://codeforces.com/problemset/problem/1592/E

BOT: Thanks! Now could you provide a link to the editorial.



USER: https://codeforces.com/blog/entry/95583

BOT: Would you like hints to help you solve the problem or an interactive explanation of the editorial (hint/editorial)? 



USER: hint

BOT: What are you current thoughts on the problem? 



USER: I know the subarray length has to be even. I also think that I can iterate over the MSB of the bitwise AND, but i don't know how to check if the XOR has a larger bit set. Can I use a binary trie for this?

BOT: Using a binary trie is not necessary for this problem. Instead, you can leverage the properties of the bitwise AND and XOR operations along with prefix arrays to solve it efficiently.

### Hint:
Focus on creating a prefix array for the XOR values considering only the important bits. For each bit position $ k $, you need to find the minimum $ l $ such that the subarray $[l, r]$ satisfies the conditions mentioned, especially that the length is even and the XOR of the subarray is zero for the important bits.

Would you like a more detailed hint on how to implement this approach?



