USER: https://codeforces.com/contest/1333/problem/C

BOT: Thanks! Now could you provide a link to the editorial.



USER: https://codeforces.com/blog/entry/75802

BOT: Would you like hints to help you solve the problem or an interactive explanation of the editorial (hint/editorial)? 



USER: hint

BOT: What are you current thoughts on the problem? 



USER: we need to find subarrays with sum 0 and then find other subarrays that doesn't contain the found array as a subarray, but how do i do inclusion and exclusion for subarrays that are counted multiple times

BOT: Your current approach seems to be focusing on identifying subarrays with a sum of zero and then excluding them from the count of all subarrays. This method might be complex and inefficient. Instead, let's focus on the editorial's approach, which is more efficient.

### Hint:
To solve this problem efficiently, consider using prefix sums and a set to track the sums. The key idea is to ensure that no prefix sum appears more than once in any subarray. This will help you determine the rightmost border for each starting point of the subarray.

Would you like a more detailed explanation of this approach?



FEEDBACK: amazing work



